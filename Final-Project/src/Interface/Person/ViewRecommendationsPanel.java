/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Person;

import Business.Helper.RoutineHelper;
import Business.Helper.SleepHelper;
import Business.Helper.VacationHelper;
import Business.Hospital.AppointmentDirectory;
import Business.Hospital.DoctorDirectory;
import Business.Hospital.VitalSignsDirectoryy;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Recommendations.RecommendationDirectory;
import Business.Recommendations.Recommendations;
import Business.Routine.FoodConsumptionTrackerDirectory;
import Business.Routine.SleepDirectory;
import Business.UserAccount.UserAccountDirectory;
import Business.WorkPlace.HolidayList;
import Business.WorkPlace.LeaveRequestHistory;
import Business.WorkPlace.MyVaccationHistory;
import Business.WorkPlace.SupervisorDirectory;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nehah
 */
public class ViewRecommendationsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewRecommendationsPanel
     */
     Calendar cal = Calendar.getInstance();
        JPanel userProcessContainer;
        Person p;
        DoctorDirectory	doctorList;
        UserAccountDirectory	uad;
        PersonDirectory	personList;
        SupervisorDirectory	supervisorList;
        MyVaccationHistory	leaveList;
        HolidayList	holidayList;
      //  VaccationHelper1	vaccationHelper;
        AppointmentDirectory	appointmentDirectory;
        SleepDirectory	sleepDirectory;
        FoodConsumptionTrackerDirectory	foodTracker;
        VitalSignsDirectoryy	vitalSignList;
        VacationHelper vh;
        List<LocalDate> getBestStartDates;
        LeaveRequestHistory leaveRequestDirectory;
        RecommendationDirectory recommmendationDirectory;
        SleepHelper sleepHelper;
        RoutineHelper routinehelper;
        
    

    ViewRecommendationsPanel(JPanel userProcessContainer, Person p, DoctorDirectory doctorList, UserAccountDirectory uad, PersonDirectory personList, SupervisorDirectory supervisorList, MyVaccationHistory leaveList, HolidayList holidayList, AppointmentDirectory appointmentDirectory, SleepDirectory sleepDirectory, FoodConsumptionTrackerDirectory foodTracker, VitalSignsDirectoryy vitalSignList, LeaveRequestHistory leaveRequestDirectory, RecommendationDirectory recommmendationDirectory) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    initComponents();
    this.userProcessContainer=userProcessContainer;
    this.p=p;
    this.doctorList=doctorList;
    this.uad=uad;
    this.personList=personList;
    this.supervisorList=supervisorList;
    this.leaveList=leaveList;
    this.holidayList=holidayList;
    //this.vaccationHelper=vaccationHelper;
    this.appointmentDirectory=appointmentDirectory;
    this.sleepDirectory=sleepDirectory;
    this.foodTracker=foodTracker;
    this.vitalSignList=vitalSignList;
    this.leaveRequestDirectory=leaveRequestDirectory;
    this.recommmendationDirectory=recommmendationDirectory;
    //vh=new  VacationHelper(holidayList.getHolidayList());
    sleepHelper=new SleepHelper(personList.getPersonList(), sleepDirectory, recommmendationDirectory);
    routinehelper=new RoutineHelper(personList.getPersonList(),   recommmendationDirectory);
    //getBestStartDates=vh.getBestVacationStartDates(p.getMyVaccationBalance());
    populateTable();
    }

    public void populateTable(){
        DefaultTableModel dtm =(DefaultTableModel)tblRecommendations.getModel();
        dtm.setRowCount(0);
        for (Recommendations r:p.getMyRecommendationsList())
        
        {
            Object row[]= new Object [1];
            row[0]=r.getRecommendationDescription();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecommendations = new javax.swing.JTable();

        tblRecommendations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recommendation"
            }
        ));
        jScrollPane1.setViewportView(tblRecommendations);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(430, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRecommendations;
    // End of variables declaration//GEN-END:variables
}
